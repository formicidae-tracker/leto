// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: letopb/leto_service.proto

package letopb

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_letopb_leto_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_letopb_leto_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_letopb_leto_service_proto_rawDescGZIP(), []int{0}
}

type StartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	YamlConfiguration string `protobuf:"bytes,1,opt,name=yaml_configuration,json=yamlConfiguration,proto3" json:"yaml_configuration,omitempty"`
}

func (x *StartRequest) Reset() {
	*x = StartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_letopb_leto_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRequest) ProtoMessage() {}

func (x *StartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_letopb_leto_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRequest.ProtoReflect.Descriptor instead.
func (*StartRequest) Descriptor() ([]byte, []int) {
	return file_letopb_leto_service_proto_rawDescGZIP(), []int{1}
}

func (x *StartRequest) GetYamlConfiguration() string {
	if x != nil {
		return x.YamlConfiguration
	}
	return ""
}

type ExperimentStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Since             *timestamp.Timestamp `protobuf:"bytes,1,opt,name=since,proto3" json:"since,omitempty"`
	ExperimentDir     string               `protobuf:"bytes,2,opt,name=experiment_dir,json=experimentDir,proto3" json:"experiment_dir,omitempty"`
	YamlConfiguration string               `protobuf:"bytes,3,opt,name=yaml_configuration,json=yamlConfiguration,proto3" json:"yaml_configuration,omitempty"`
}

func (x *ExperimentStatus) Reset() {
	*x = ExperimentStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_letopb_leto_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExperimentStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExperimentStatus) ProtoMessage() {}

func (x *ExperimentStatus) ProtoReflect() protoreflect.Message {
	mi := &file_letopb_leto_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExperimentStatus.ProtoReflect.Descriptor instead.
func (*ExperimentStatus) Descriptor() ([]byte, []int) {
	return file_letopb_leto_service_proto_rawDescGZIP(), []int{2}
}

func (x *ExperimentStatus) GetSince() *timestamp.Timestamp {
	if x != nil {
		return x.Since
	}
	return nil
}

func (x *ExperimentStatus) GetExperimentDir() string {
	if x != nil {
		return x.ExperimentDir
	}
	return ""
}

func (x *ExperimentStatus) GetYamlConfiguration() string {
	if x != nil {
		return x.YamlConfiguration
	}
	return ""
}

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Master         string            `protobuf:"bytes,1,opt,name=master,proto3" json:"master,omitempty"`
	Slaves         []string          `protobuf:"bytes,2,rep,name=slaves,proto3" json:"slaves,omitempty"`
	Experiment     *ExperimentStatus `protobuf:"bytes,3,opt,name=experiment,proto3" json:"experiment,omitempty"`
	TotalBytes     int64             `protobuf:"varint,4,opt,name=total_bytes,json=totalBytes,proto3" json:"total_bytes,omitempty"`
	FreeBytes      int64             `protobuf:"varint,5,opt,name=free_bytes,json=freeBytes,proto3" json:"free_bytes,omitempty"`
	BytesPerSecond int64             `protobuf:"varint,6,opt,name=bytes_per_second,json=bytesPerSecond,proto3" json:"bytes_per_second,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_letopb_leto_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_letopb_leto_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_letopb_leto_service_proto_rawDescGZIP(), []int{3}
}

func (x *Status) GetMaster() string {
	if x != nil {
		return x.Master
	}
	return ""
}

func (x *Status) GetSlaves() []string {
	if x != nil {
		return x.Slaves
	}
	return nil
}

func (x *Status) GetExperiment() *ExperimentStatus {
	if x != nil {
		return x.Experiment
	}
	return nil
}

func (x *Status) GetTotalBytes() int64 {
	if x != nil {
		return x.TotalBytes
	}
	return 0
}

func (x *Status) GetFreeBytes() int64 {
	if x != nil {
		return x.FreeBytes
	}
	return 0
}

func (x *Status) GetBytesPerSecond() int64 {
	if x != nil {
		return x.BytesPerSecond
	}
	return 0
}

type ExperimentLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Log               string               `protobuf:"bytes,1,opt,name=log,proto3" json:"log,omitempty"`
	Stderr            string               `protobuf:"bytes,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
	ExperimentDir     string               `protobuf:"bytes,3,opt,name=experiment_dir,json=experimentDir,proto3" json:"experiment_dir,omitempty"`
	Start             *timestamp.Timestamp `protobuf:"bytes,4,opt,name=start,proto3" json:"start,omitempty"`
	End               *timestamp.Timestamp `protobuf:"bytes,5,opt,name=end,proto3" json:"end,omitempty"`
	YamlConfiguration string               `protobuf:"bytes,6,opt,name=yaml_configuration,json=yamlConfiguration,proto3" json:"yaml_configuration,omitempty"`
	HasError          bool                 `protobuf:"varint,7,opt,name=has_error,json=hasError,proto3" json:"has_error,omitempty"`
}

func (x *ExperimentLog) Reset() {
	*x = ExperimentLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_letopb_leto_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExperimentLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExperimentLog) ProtoMessage() {}

func (x *ExperimentLog) ProtoReflect() protoreflect.Message {
	mi := &file_letopb_leto_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExperimentLog.ProtoReflect.Descriptor instead.
func (*ExperimentLog) Descriptor() ([]byte, []int) {
	return file_letopb_leto_service_proto_rawDescGZIP(), []int{4}
}

func (x *ExperimentLog) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

func (x *ExperimentLog) GetStderr() string {
	if x != nil {
		return x.Stderr
	}
	return ""
}

func (x *ExperimentLog) GetExperimentDir() string {
	if x != nil {
		return x.ExperimentDir
	}
	return ""
}

func (x *ExperimentLog) GetStart() *timestamp.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *ExperimentLog) GetEnd() *timestamp.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *ExperimentLog) GetYamlConfiguration() string {
	if x != nil {
		return x.YamlConfiguration
	}
	return ""
}

func (x *ExperimentLog) GetHasError() bool {
	if x != nil {
		return x.HasError
	}
	return false
}

type TrackingLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Master string `protobuf:"bytes,1,opt,name=master,proto3" json:"master,omitempty"`
	Slave  string `protobuf:"bytes,2,opt,name=slave,proto3" json:"slave,omitempty"`
}

func (x *TrackingLink) Reset() {
	*x = TrackingLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_letopb_leto_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackingLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackingLink) ProtoMessage() {}

func (x *TrackingLink) ProtoReflect() protoreflect.Message {
	mi := &file_letopb_leto_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackingLink.ProtoReflect.Descriptor instead.
func (*TrackingLink) Descriptor() ([]byte, []int) {
	return file_letopb_leto_service_proto_rawDescGZIP(), []int{5}
}

func (x *TrackingLink) GetMaster() string {
	if x != nil {
		return x.Master
	}
	return ""
}

func (x *TrackingLink) GetSlave() string {
	if x != nil {
		return x.Slave
	}
	return ""
}

var File_letopb_leto_service_proto protoreflect.FileDescriptor

var file_letopb_leto_service_proto_rawDesc = []byte{
	0x0a, 0x19, 0x6c, 0x65, 0x74, 0x6f, 0x70, 0x62, 0x2f, 0x6c, 0x65, 0x74, 0x6f, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x66, 0x6f, 0x72,
	0x74, 0x2e, 0x6c, 0x65, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x07, 0x0a,
	0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x3d, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x79, 0x61, 0x6d, 0x6c, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x79, 0x61, 0x6d, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9a, 0x01, 0x0a, 0x10, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x69,
	0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74,
	0x44, 0x69, 0x72, 0x12, 0x2d, 0x0a, 0x12, 0x79, 0x61, 0x6d, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x79, 0x61, 0x6d, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xe5, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x73, 0x12, 0x41, 0x0a,
	0x0a, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x2e, 0x6c, 0x65, 0x74, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x66, 0x72, 0x65, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x28, 0x0a, 0x10, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x22, 0x8c, 0x02, 0x0a, 0x0d, 0x45,
	0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x10, 0x0a, 0x03,
	0x6c, 0x6f, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x72, 0x12, 0x30, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12,
	0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x2d, 0x0a,
	0x12, 0x79, 0x61, 0x6d, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x79, 0x61, 0x6d, 0x6c, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x68, 0x61, 0x73, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x68, 0x61, 0x73, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x3c, 0x0a, 0x0c, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x32, 0x9c, 0x03, 0x0a, 0x04, 0x4c, 0x65, 0x74, 0x6f,
	0x12, 0x46, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x12, 0x1d, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x2e, 0x6c, 0x65, 0x74, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x2e, 0x6c, 0x65, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3e, 0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x70,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x2e,
	0x6c, 0x65, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x16, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x2e, 0x6c, 0x65, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3c, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x2e, 0x6c, 0x65, 0x74,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x17, 0x2e,
	0x66, 0x6f, 0x72, 0x74, 0x2e, 0x6c, 0x65, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73,
	0x74, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x16,
	0x2e, 0x66, 0x6f, 0x72, 0x74, 0x2e, 0x6c, 0x65, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1e, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x2e, 0x6c, 0x65,
	0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d,
	0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x3d, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1d,
	0x2e, 0x66, 0x6f, 0x72, 0x74, 0x2e, 0x6c, 0x65, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x1a, 0x16, 0x2e,
	0x66, 0x6f, 0x72, 0x74, 0x2e, 0x6c, 0x65, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3f, 0x0a, 0x06, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x12,
	0x1d, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x2e, 0x6c, 0x65, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x1a, 0x16,
	0x2e, 0x66, 0x6f, 0x72, 0x74, 0x2e, 0x6c, 0x65, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x3b, 0x6c, 0x65, 0x74, 0x6f,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_letopb_leto_service_proto_rawDescOnce sync.Once
	file_letopb_leto_service_proto_rawDescData = file_letopb_leto_service_proto_rawDesc
)

func file_letopb_leto_service_proto_rawDescGZIP() []byte {
	file_letopb_leto_service_proto_rawDescOnce.Do(func() {
		file_letopb_leto_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_letopb_leto_service_proto_rawDescData)
	})
	return file_letopb_leto_service_proto_rawDescData
}

var file_letopb_leto_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_letopb_leto_service_proto_goTypes = []interface{}{
	(*Empty)(nil),               // 0: fort.leto.proto.Empty
	(*StartRequest)(nil),        // 1: fort.leto.proto.StartRequest
	(*ExperimentStatus)(nil),    // 2: fort.leto.proto.ExperimentStatus
	(*Status)(nil),              // 3: fort.leto.proto.Status
	(*ExperimentLog)(nil),       // 4: fort.leto.proto.ExperimentLog
	(*TrackingLink)(nil),        // 5: fort.leto.proto.TrackingLink
	(*timestamp.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_letopb_leto_service_proto_depIdxs = []int32{
	6,  // 0: fort.leto.proto.ExperimentStatus.since:type_name -> google.protobuf.Timestamp
	2,  // 1: fort.leto.proto.Status.experiment:type_name -> fort.leto.proto.ExperimentStatus
	6,  // 2: fort.leto.proto.ExperimentLog.start:type_name -> google.protobuf.Timestamp
	6,  // 3: fort.leto.proto.ExperimentLog.end:type_name -> google.protobuf.Timestamp
	1,  // 4: fort.leto.proto.Leto.StartTracking:input_type -> fort.leto.proto.StartRequest
	0,  // 5: fort.leto.proto.Leto.StopTracking:input_type -> fort.leto.proto.Empty
	0,  // 6: fort.leto.proto.Leto.GetStatus:input_type -> fort.leto.proto.Empty
	0,  // 7: fort.leto.proto.Leto.GetLastExperimentLog:input_type -> fort.leto.proto.Empty
	5,  // 8: fort.leto.proto.Leto.Link:input_type -> fort.leto.proto.TrackingLink
	5,  // 9: fort.leto.proto.Leto.Unlink:input_type -> fort.leto.proto.TrackingLink
	0,  // 10: fort.leto.proto.Leto.StartTracking:output_type -> fort.leto.proto.Empty
	0,  // 11: fort.leto.proto.Leto.StopTracking:output_type -> fort.leto.proto.Empty
	3,  // 12: fort.leto.proto.Leto.GetStatus:output_type -> fort.leto.proto.Status
	4,  // 13: fort.leto.proto.Leto.GetLastExperimentLog:output_type -> fort.leto.proto.ExperimentLog
	0,  // 14: fort.leto.proto.Leto.Link:output_type -> fort.leto.proto.Empty
	0,  // 15: fort.leto.proto.Leto.Unlink:output_type -> fort.leto.proto.Empty
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_letopb_leto_service_proto_init() }
func file_letopb_leto_service_proto_init() {
	if File_letopb_leto_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_letopb_leto_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_letopb_leto_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_letopb_leto_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExperimentStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_letopb_leto_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_letopb_leto_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExperimentLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_letopb_leto_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackingLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_letopb_leto_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_letopb_leto_service_proto_goTypes,
		DependencyIndexes: file_letopb_leto_service_proto_depIdxs,
		MessageInfos:      file_letopb_leto_service_proto_msgTypes,
	}.Build()
	File_letopb_leto_service_proto = out.File
	file_letopb_leto_service_proto_rawDesc = nil
	file_letopb_leto_service_proto_goTypes = nil
	file_letopb_leto_service_proto_depIdxs = nil
}
